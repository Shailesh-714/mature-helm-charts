{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.badgesSection" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

## TL;DR

```bash
helm repo add hyperswitch https://juspay.github.io/hyperswitch-helm/
helm install hyperswitch-ucs hyperswitch/hyperswitch-ucs
```

## Introduction

This chart deploys the Hyperswitch UCS (Unified Connector Service) on a Kubernetes cluster using the Helm package manager.

## Prerequisites

- Kubernetes 1.19+
- Helm 3.2.0+

## Installing the Chart

To install the chart with the release name `hyperswitch-ucs`:

```bash
helm install hyperswitch-ucs ./charts/incubator/hyperswitch-ucs -n hyperswitch --create-namespace
```

## Uninstalling the Chart

To uninstall/delete the `hyperswitch-ucs` deployment:

```bash
helm uninstall hyperswitch-ucs -n hyperswitch
```

## Configuration

The following table lists the configurable parameters of the hyperswitch-ucs chart and their default values.

{{ template "chart.valuesSection" . }}

### Example Configuration

#### Running without proxy (for local development)

```yaml
# values-local.yaml
env:
  - name: CS__PROXY__HTTPS_URL
    value: ""
  - name: CS__PROXY__HTTP_URL
    value: ""
  - name: CS__PROXY__BYPASS_PROXY_URLS
    value: ""
```

```bash
helm install hyperswitch-ucs ./charts/incubator/hyperswitch-ucs -f values-local.yaml -n hyperswitch
```

#### Running with custom resource limits

```yaml
# values-production.yaml
replicaCount: 3

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
```

## Service Details

The chart deploys two services:
- **gRPC Service** (port 8000): Main gRPC service endpoint
- **Metrics Service** (port 8080): Prometheus metrics endpoint

### Health Checks

The deployment includes both liveness and readiness probes using gRPC health checks:
- Liveness probe: Ensures the container is running
- Readiness probe: Ensures the service is ready to accept traffic

### Monitoring

Prometheus metrics are exposed on port 8080 at `/metrics` endpoint. Metrics include:
- `GRPC_SERVER_REQUESTS_TOTAL`: Total number of gRPC requests
- `GRPC_SERVER_REQUESTS_SUCCESSFUL`: Number of successful requests
- `GRPC_SERVER_REQUEST_LATENCY`: Request latency histogram

## Troubleshooting

### Check pod status
```bash
kubectl get pods -l app.kubernetes.io/name=hyperswitch-ucs -n hyperswitch
kubectl describe pod -l app.kubernetes.io/name=hyperswitch-ucs -n hyperswitch
```

### Check logs
```bash
kubectl logs -l app.kubernetes.io/name=hyperswitch-ucs -n hyperswitch
```

### Test metrics endpoint
```bash
kubectl port-forward svc/hyperswitch-ucs 8080:8080 -n hyperswitch
curl http://localhost:8080/metrics
```

### Test gRPC health endpoint
```bash
kubectl port-forward svc/hyperswitch-ucs 8000:8000 -n hyperswitch
grpcurl -plaintext localhost:8000 grpc.health.v1.Health/Check
```

{{ template "chart.maintainersSection" . }}

{{ template "chart.sourcesSection" . }}
