name: Release Charts

on:
  workflow_dispatch:

permissions: {}

jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Add helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add opentelemetry https://open-telemetry.github.io/opentelemetry-helm-charts
          helm repo add vector https://helm.vector.dev
          helm repo add codecentric https://codecentric.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Build Helm Dependencies
        run: |
          # Build dependencies for all charts
          for chart in charts/incubator/*; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Updating dependencies for $chart"
              helm dependency update "$chart"
            fi
          done

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Create a directory for release notes
          mkdir -p .release-notes
          
          # Function to extract changes from Chart.yaml annotations
          generate_chart_notes() {
            local chart_path=$1
            local chart_name=$(basename $chart_path)
            local version=$(yq '.version' $chart_path/Chart.yaml)
            
            echo "## $chart_name v$version"
            echo ""
            
            # Check if annotations exist
            if yq -e '.annotations."artifacthub.io/changes"' $chart_path/Chart.yaml > /dev/null 2>&1; then
              echo "### What's Changed"
              yq '.annotations."artifacthub.io/changes"' $chart_path/Chart.yaml | yq -r '.[] | "- \(.description)"'
              echo ""
            fi
            
            # Add upgrade notes if they exist
            if [ -f "$chart_path/UPGRADE.md" ]; then
              echo "### Upgrade Notes"
              echo "See [UPGRADE.md]($chart_path/UPGRADE.md) for detailed upgrade instructions."
              echo ""
            fi
            
            echo "### Installation"
            echo '```bash'
            echo "helm repo add hyperswitch https://juspay.github.io/hyperswitch-helm"
            echo "helm repo update"
            echo "helm install $chart_name hyperswitch/$chart_name --version $version"
            echo '```'
            echo ""
          }
          
          # Generate notes for each changed chart
          for chart in charts/incubator/*; do
            if [ -f "$chart/Chart.yaml" ]; then
              generate_chart_notes $chart > .release-notes/$(basename $chart).md
            fi
          done

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: charts/incubator
          config: cr.yaml
          mark_as_latest: false
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: "true"
          CR_RELEASE_NOTES_FILE: .release-notes/{{ .Name }}.md

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            REPO_NAME=${{ github.event.repository.name }}
            helm push "${pkg}" "oci://ghcr.io/${REPO_OWNER}/${REPO_NAME}"
          done
